GCD -  greatest common divisor

 --> we will use euclidians methord  
    gcd(a, b) = gcd(a, a - b)
    gcd(a, b) = gcd(a, a % b) 
    
    eg : -
        gcd(11, 2) = 1
        if gcd == 1 => coprime
        a = 0, b => b
        lcm = a * b / gcd(a, b)

--> RECCURSIVE

int gcd(int a, int b) {
    if(b == 0) {
        return a;
    }
    return gcd(b, a % b);
}

--> ITERATIVE

int gcdi(int a,int b){
    while(b!=0){
        int temp  = a%b;
        a = b;
        b = temp;
    }
    return a;
}


TC : - O(log(n)), n = max(a, b)


--> gcd( lcm(a,b) , lcm(a,c) ) =  lcm( a , gcd(b,c))
